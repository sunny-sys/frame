package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import io.smallbird.common.model.BaseResp;
import io.smallbird.common.model.DetailResp;
import io.smallbird.common.model.PageListResp;
import io.smallbird.common.validator.ValidatorUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.baomidou.mybatisplus.core.metadata.IPage;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;

@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(tags = "${comments}", description = "${author}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    @RequestMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public PageListResp list(@RequestParam Map<String, Object> params){
        IPage page = ${classname}Service.queryPage(params);
        return PageListResp.success(page);
    }

    @RequestMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public DetailResp info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});
        return DetailResp.success(${classname});
    }

    @RequestMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public BaseResp save(@RequestBody ${className}Entity ${classname}){
        ${classname}Service.save(${classname});
        return BaseResp.success();
    }

    @RequestMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    public BaseResp update(@RequestBody ${className}Entity ${classname}){
        ValidatorUtils.validateEntity(${classname});
        ${classname}Service.updateById(${classname});
        return BaseResp.success();
    }

    @RequestMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public BaseResp delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
        ${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));
        return BaseResp.success();
    }

}
